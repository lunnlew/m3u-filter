name: Desktop Client Build and Publish

on:
  push:
    tags:
      - '*'

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    # Add Python environment setup
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install PyInstaller
      run: pip install pyinstaller

    # Add GLib dependencies for Linux/macOS
    - name: Install Linux dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libglib2.0-dev \
          libgtk-3-dev \
          libwebkit2gtk-4.0-dev \
          libayatana-appindicator3-dev

    - name: Install macOS dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew install pkg-config
        brew install gtk+3 
        brew install gdk-pixbuf
        export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig:$PKG_CONFIG_PATH"

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install desktop dependencies
      run: |
        cd desktop
        pnpm install --no-frozen-lockfile
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        pnpm install --no-frozen-lockfile

    - name: Install Backend dependencies
      run: |
        cd backend
        pip install -r requirements.txt --no-cache-dir

    - name: Build desktop app
      run: |
        cd desktop
        pnpm build

    - name: Extract tag name
      id: get_tag
      shell: bash
      run: echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: desktop-${{ matrix.os }}
        path: |
          desktop/src-tauri/target/release/bundle/msi/*.msi
          desktop/src-tauri/target/release/bundle/dmg/*.dmg
          desktop/src-tauri/target/release/bundle/appimage/*.AppImage
          desktop/src-tauri/target/release/bundle/deb/*.deb

    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          desktop/src-tauri/target/release/bundle/msi/*.msi
          desktop/src-tauri/target/release/bundle/dmg/*.dmg
          desktop/src-tauri/target/release/bundle/appimage/*.AppImage
          desktop/src-tauri/target/release/bundle/deb/*.deb
        name: Release ${{ env.TAG_NAME }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}