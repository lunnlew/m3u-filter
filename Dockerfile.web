# 构建前端
FROM --platform=$BUILDPLATFORM node:20-alpine AS frontend-builder
WORKDIR /app
COPY frontend/package.json frontend/pnpm-lock.yaml ./
RUN corepack enable && pnpm install --no-frozen-lockfile --force
COPY frontend .
RUN pnpm run build && \
    rm -rf node_modules

# 构建后端
FROM --platform=$BUILDPLATFORM python:3.11-alpine AS builder
WORKDIR /app

# 安装构建依赖
RUN apk add --no-cache \
    build-base \
    python3-dev \
    musl-dev \
    zlib-dev

# 安装Python依赖
COPY backend/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir pyinstaller && \
    rm -rf /root/.cache

# 复制后端代码并构建
COPY backend .
RUN pyinstaller --noconfirm --clean --strip pyinstaller.spec

# 最终镜像
FROM --platform=$BUILDPLATFORM alpine:3.19
WORKDIR /app

# 安装运行时依赖
RUN apk add --no-cache \
    ffmpeg \
    python3 \
    tzdata && \
    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

# 仅复制必要的运行时文件
COPY --from=builder /app/dist/m3u_filter_backend /app/m3u-filter
COPY --from=frontend-builder /app/dist ./data/web

# 设置环境变量
ENV PYTHONUNBUFFERED=1 \
    TZ=Asia/Shanghai \
    M3U_FILTER_DATA_ROOT=/app/data \
    M3U_FILTER_WEB_ROOT=/app/data/web \
    M3U_FILTER_RESOURCE_ROOT=/app/data/resource \
    M3U_FILTER_LOGS_ROOT=/app/data/logs \
    M3U_FILTER_LOGOS_ROOT=/app/data/logos

VOLUME /app/data
EXPOSE 3232

# 直接运行二进制文件
CMD ["/app/m3u-filter"]